!function(){"use strict";class t{constructor(t,e,i){this.id=i||Math.floor(performance.now()),this.name=t,this.price=e}edit(t,e){this.name=t,this.price=e}}class e{constructor(e){this.products=[],e.forEach((e=>{const i=new t(e.name,e.price,e.id);this.products.push(i)}))}add(t){this.products.push(t)}update(t,e,i){this.products.find((e=>e.id===t)).edit(e,i)}remove(t){this.products=this.products.filter((e=>e.id!==t))}}var i=JSON.parse('[{"id":1,"name":"iPhone XR","price":600},{"id":2,"name":"Samsung Galaxy S10","price":800},{"id":3,"name":"Huawei View","price":500}]');class d{constructor(){this._tooltips=[]}showTooltip(t,e){const i=document.createElement("div");i.classList.add("form-error"),i.textContent=t;const d=Math.floor(performance.now());this._tooltips.push({id:d,element:i}),document.body.appendChild(i);const{right:o,top:r}=e.getBoundingClientRect();return i.style.left=`${o+5}px`,i.style.top=r+e.offsetHeight/2-i.offsetHeight/2+"px",d}removeTooltip(t){this._tooltips.find((e=>e.id===t)).element.remove(),this._tooltips=this._tooltips.filter((e=>e.id!==t))}}const o={name:{valueMissing:"Missing name"},price:{valueMissing:"Missing price",patternMismatch:"Price should be number"}};class r{constructor(t){this.formName=t,this.tooltipFactory=new d,this.actualTooltips=[],this.onSubmit=this.onSubmit.bind(this)}bindToDOM(){this.form=document.querySelector(this.formName)}showTooltip(t,e){this.actualTooltips.push({name:e.name,id:this.tooltipFactory.showTooltip(t,e)})}getError(t){const e=Object.keys(ValidityState.prototype).find((e=>{if(t.name&&"valid"!==e)return t.validity[e]}));if(e)return o[t.name][e]}onSubmit(t){if(this.clearTooltips(),this.form.checkValidity()?(console.log("valid"),this.currentStatus=!0):(console.log("invalid"),this.currentStatus=!1),!this.currentStatus){const{elements:t}=this.form;return[...t].some((t=>{const e=this.getError(t);if(e)return this.showTooltip(e,t),!0})),!0}return console.log("submit"),!1}clearTooltips(){this.actualTooltips.forEach((t=>this.tooltipFactory.removeTooltip(t.id))),this.actualTooltips=[]}}const s=new class{constructor(t){this.containerElemName=t,this.productList=new e(i),this.onClickProduct=this.onClickProduct.bind(this),this.onAddProduct=this.onAddProduct.bind(this),this.onAddSubmit=this.onAddSubmit.bind(this),this.onAddCancel=this.onAddCancel.bind(this),this.onEditSubmit=this.onEditSubmit.bind(this),this.onEditCancel=this.onEditCancel.bind(this)}addFormMarkup(){return'\n        <form class="product__add_form">\n            <label for="product__add_input_name">Name</label>\n            <input type="text" class="product__add_input" name="name" id="product__add_input_name" required>\n            <label for="product__add_input_price">Price</label>\n            <input type="text" class="product__add_input" name="price" id="product__add_input_price" required>\n            <input type="submit" value="Submit" class="product__add_submit">\n            <input type="button" value="Cancel" class="product__add_cancel">\n        </form>\n    '}editFormMarkup(){return'\n        <form class="product__edit_form">\n            <label for="product__edit_input_name">Name</label>\n            <input type="text" class="product__edit_input" name="name" id="product__edit_input_name" required>\n            <label for="product__edit_input_price">Price</label>\n            <input type="text" class="product__edit_input" name="price" id="product__edit_input_price" required>\n            <input type="text" class="hidden" name="id">\n            <input type="submit" value="Submit" class="product__edit_submit">\n            <input type="button" value="Cancel" class="product__edit_cancel">\n        </form>\n    '}bindToDOM(){this.container=document.querySelector(this.containerElemName),this.container.addEventListener("click",this.onClickProduct)}bindToDOMAdd(){this.addForm=document.querySelector(".product__add_form"),this.addButton=document.querySelector(".container__button_add"),this.nameElemAdd=this.addForm.querySelector('[name="name"]'),this.priceElemAdd=this.addForm.querySelector('[name="price"]'),this.priceElemAdd.setAttribute("pattern","^\\d+(.\\d+)?$"),this.cancelButtonAdd=this.addForm.querySelector(".product__add_cancel"),this.addButton.addEventListener("click",this.onAddProduct),this.cancelButtonAdd.addEventListener("click",this.onAddCancel),this.addForm.addEventListener("submit",this.onAddSubmit),this.tooltipAddWidget=new r(".product__add_form")}bindToDOMEdit(){this.editForm=document.querySelector(".product__edit_form"),this.nameElemEdit=this.editForm.querySelector('[name="name"]'),this.priceElemEdit=this.editForm.querySelector('[name="price"]'),this.priceElemEdit.setAttribute("pattern","^\\d+(.\\d+)?$"),this.idElemEdit=this.editForm.querySelector('[name="id"]'),this.cancelButtonEdit=this.editForm.querySelector(".product__edit_cancel"),this.editForm.addEventListener("submit",this.onEditSubmit),this.cancelButtonEdit.addEventListener("click",this.onEditCancel),this.tooltipEditWidget=new r(".product__edit_form")}renderProduct(t){return`\n      <tr>\n        <td>${t.name}</td>\n        <td>${t.price}</td>\n        <td class="edit_field">\n            <span class="edit" data-id="${t.id}">&#9998;</span>\n            <span class="delete" data-id="${t.id}">x</span>\n        </td>\n      </tr>\n    `}renderContent(){const t=document.createElement("form");t.className="product__add_form",t.noValidate=!0,t.innerHTML=this.addFormMarkup(),this.container.insertBefore(t,null),this.bindToDOMAdd();const e=document.createElement("form");e.className="product__edit_form",e.noValidate=!0,e.innerHTML=this.editFormMarkup(),this.container.insertBefore(e,null),this.bindToDOMEdit(),this.renderProducts(),this.tooltipAddWidget.bindToDOM(),this.tooltipEditWidget.bindToDOM()}renderProducts(){const t=document.createElement("table");t.className="products",t.innerHTML="<th>Name</th><th>Price</th><th>Actions</th>",this.container.insertBefore(t,null),this.productList.products.forEach((e=>{const i=this.renderProduct(e);t.insertAdjacentHTML("beforeend",i)}))}clearProducts(){document.querySelector("table").remove()}onClickProduct(t){if("delete"===t.target.className)this.productList.remove(Number(t.target.dataset.id)),t.target.closest("tr").remove();else if("edit"===t.target.className){this.editForm.classList.toggle("product__edit_form_active");const e=this.productList.products.find((e=>e.id===Number(t.target.dataset.id)));this.nameElemEdit.value=e.name,this.priceElemEdit.value=e.price,this.idElemEdit.value=e.id}}onAddProduct(t){this.addForm.classList.toggle("product__add_form_active")}onAddSubmit(e){if(e.preventDefault(),!this.tooltipAddWidget.onSubmit(e)){const e=this.nameElemAdd.value,i=this.priceElemAdd.value;this.productList.add(new t(e,i)),this.nameElemAdd.value="",this.priceElemAdd.value="",this.addForm.classList.toggle("product__add_form_active"),this.clearProducts(),this.renderProducts()}}onAddCancel(t){"product__add_cancel"===t.target.className&&(this.tooltipAddWidget.clearTooltips(),this.nameElemAdd.value="",this.priceElemAdd.value="",this.addForm.classList.toggle("product__add_form_active"))}onEditSubmit(t){if(t.preventDefault(),!this.tooltipEditWidget.onSubmit(t)){const t=this.nameElemEdit.value,e=this.priceElemEdit.value,i=Number(this.idElemEdit.value);this.productList.update(i,t,e),this.nameElemEdit.value="",this.priceElemEdit.value="",this.editForm.classList.toggle("product__edit_form_active"),this.clearProducts(),this.renderProducts()}}onEditCancel(t){this.tooltipEditWidget.clearTooltips(),this.nameElemEdit.value="",this.priceElemEdit.value="",this.editForm.classList.toggle("product__edit_form_active")}}(".container__table");s.bindToDOM(),s.renderContent()}();